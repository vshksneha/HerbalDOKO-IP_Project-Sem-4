// Generated by view binder compiler. Do not edit!
package com.android.onlineshoppingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.android.onlineshoppingapp.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutBottomSheetEditProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView bottomSheetEditProductClose;

  @NonNull
  public final TextInputEditText bottomSheetEditProductDescription;

  @NonNull
  public final TextInputEditText bottomSheetEditProductName;

  @NonNull
  public final TextInputEditText bottomSheetEditProductPrice;

  @NonNull
  public final TextInputEditText bottomSheetEditProductQuantity;

  @NonNull
  public final LinearLayout bottomSheetLayoutEditProduct;

  @NonNull
  public final Button btnAddImageEditProduct;

  @NonNull
  public final Button btnBottomSheetEditProduct;

  @NonNull
  public final TextInputLayout layoutBottomSheetEditProductDescription;

  @NonNull
  public final TextInputLayout layoutBottomSheetEditProductName;

  @NonNull
  public final TextInputLayout layoutBottomSheetEditProductPrice;

  @NonNull
  public final TextInputLayout layoutBottomSheetEditProductQuantity;

  @NonNull
  public final TextInputLayout layoutCategoryEditProduct;

  @NonNull
  public final RecyclerView rvImagesEditProduct;

  @NonNull
  public final AutoCompleteTextView tvCategoryEditProduct;

  private LayoutBottomSheetEditProductBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView bottomSheetEditProductClose,
      @NonNull TextInputEditText bottomSheetEditProductDescription,
      @NonNull TextInputEditText bottomSheetEditProductName,
      @NonNull TextInputEditText bottomSheetEditProductPrice,
      @NonNull TextInputEditText bottomSheetEditProductQuantity,
      @NonNull LinearLayout bottomSheetLayoutEditProduct, @NonNull Button btnAddImageEditProduct,
      @NonNull Button btnBottomSheetEditProduct,
      @NonNull TextInputLayout layoutBottomSheetEditProductDescription,
      @NonNull TextInputLayout layoutBottomSheetEditProductName,
      @NonNull TextInputLayout layoutBottomSheetEditProductPrice,
      @NonNull TextInputLayout layoutBottomSheetEditProductQuantity,
      @NonNull TextInputLayout layoutCategoryEditProduct, @NonNull RecyclerView rvImagesEditProduct,
      @NonNull AutoCompleteTextView tvCategoryEditProduct) {
    this.rootView = rootView;
    this.bottomSheetEditProductClose = bottomSheetEditProductClose;
    this.bottomSheetEditProductDescription = bottomSheetEditProductDescription;
    this.bottomSheetEditProductName = bottomSheetEditProductName;
    this.bottomSheetEditProductPrice = bottomSheetEditProductPrice;
    this.bottomSheetEditProductQuantity = bottomSheetEditProductQuantity;
    this.bottomSheetLayoutEditProduct = bottomSheetLayoutEditProduct;
    this.btnAddImageEditProduct = btnAddImageEditProduct;
    this.btnBottomSheetEditProduct = btnBottomSheetEditProduct;
    this.layoutBottomSheetEditProductDescription = layoutBottomSheetEditProductDescription;
    this.layoutBottomSheetEditProductName = layoutBottomSheetEditProductName;
    this.layoutBottomSheetEditProductPrice = layoutBottomSheetEditProductPrice;
    this.layoutBottomSheetEditProductQuantity = layoutBottomSheetEditProductQuantity;
    this.layoutCategoryEditProduct = layoutCategoryEditProduct;
    this.rvImagesEditProduct = rvImagesEditProduct;
    this.tvCategoryEditProduct = tvCategoryEditProduct;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutBottomSheetEditProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutBottomSheetEditProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_bottom_sheet_edit_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutBottomSheetEditProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomSheetEditProductClose;
      ImageView bottomSheetEditProductClose = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetEditProductClose == null) {
        break missingId;
      }

      id = R.id.bottomSheetEditProductDescription;
      TextInputEditText bottomSheetEditProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetEditProductDescription == null) {
        break missingId;
      }

      id = R.id.bottomSheetEditProductName;
      TextInputEditText bottomSheetEditProductName = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetEditProductName == null) {
        break missingId;
      }

      id = R.id.bottomSheetEditProductPrice;
      TextInputEditText bottomSheetEditProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetEditProductPrice == null) {
        break missingId;
      }

      id = R.id.bottomSheetEditProductQuantity;
      TextInputEditText bottomSheetEditProductQuantity = ViewBindings.findChildViewById(rootView, id);
      if (bottomSheetEditProductQuantity == null) {
        break missingId;
      }

      LinearLayout bottomSheetLayoutEditProduct = (LinearLayout) rootView;

      id = R.id.btnAddImageEditProduct;
      Button btnAddImageEditProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnAddImageEditProduct == null) {
        break missingId;
      }

      id = R.id.btnBottomSheetEditProduct;
      Button btnBottomSheetEditProduct = ViewBindings.findChildViewById(rootView, id);
      if (btnBottomSheetEditProduct == null) {
        break missingId;
      }

      id = R.id.layout_bottomSheetEditProductDescription;
      TextInputLayout layoutBottomSheetEditProductDescription = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottomSheetEditProductDescription == null) {
        break missingId;
      }

      id = R.id.layout_bottomSheetEditProductName;
      TextInputLayout layoutBottomSheetEditProductName = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottomSheetEditProductName == null) {
        break missingId;
      }

      id = R.id.layout_bottomSheetEditProductPrice;
      TextInputLayout layoutBottomSheetEditProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottomSheetEditProductPrice == null) {
        break missingId;
      }

      id = R.id.layout_bottomSheetEditProductQuantity;
      TextInputLayout layoutBottomSheetEditProductQuantity = ViewBindings.findChildViewById(rootView, id);
      if (layoutBottomSheetEditProductQuantity == null) {
        break missingId;
      }

      id = R.id.layoutCategoryEditProduct;
      TextInputLayout layoutCategoryEditProduct = ViewBindings.findChildViewById(rootView, id);
      if (layoutCategoryEditProduct == null) {
        break missingId;
      }

      id = R.id.rvImagesEditProduct;
      RecyclerView rvImagesEditProduct = ViewBindings.findChildViewById(rootView, id);
      if (rvImagesEditProduct == null) {
        break missingId;
      }

      id = R.id.tvCategoryEditProduct;
      AutoCompleteTextView tvCategoryEditProduct = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryEditProduct == null) {
        break missingId;
      }

      return new LayoutBottomSheetEditProductBinding((LinearLayout) rootView,
          bottomSheetEditProductClose, bottomSheetEditProductDescription,
          bottomSheetEditProductName, bottomSheetEditProductPrice, bottomSheetEditProductQuantity,
          bottomSheetLayoutEditProduct, btnAddImageEditProduct, btnBottomSheetEditProduct,
          layoutBottomSheetEditProductDescription, layoutBottomSheetEditProductName,
          layoutBottomSheetEditProductPrice, layoutBottomSheetEditProductQuantity,
          layoutCategoryEditProduct, rvImagesEditProduct, tvCategoryEditProduct);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
